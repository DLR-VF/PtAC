name: Test PtAC with Mamba in Windows

on:
  push:
    branches: [ master ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ master ]
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    - cron: '0 0 * * *'

env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  build:

    strategy:
      matrix:
        python-version: ['3.8']
        include:
          #- os: ubuntu-latest
          #label: linux-64
          #prefix: /usr/share/miniconda3/envs/ptac-dev

          #- os: macos-latest
          #label: osx-64
          #prefix: /Users/runner/miniconda3/envs/ptac-dev

          - os: windows-latest
            label: win-64
            prefix: C:\Miniconda3\envs\ptac-dev

    name: Python ${{ matrix.python-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: ptac-dev
            use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('tests/environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: | 
          mamba list --revisions
          mamba env update -n ptac-dev -f tests/environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install PtAC
        shell: bash -l {0}
        run: |
          conda activate ptac-dev
          python setup.py install
          conda list
          conda info --all

      - name: Lint
        shell: bash -l {0}
        run: |
          isort . --check-only
          black . --line-length 120 --check --diff
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
          pydocstyle .

      - name: Run tests
        shell: bash -l {0}
        run: pytest ./tests
