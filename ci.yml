#me: Install dependencies
#      run: |
#        python -m pip install poetry
#        poetry install
#    - name: Test with pytest
#      run: poetry run pytest -v
# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# todo: why do the tests  fail on ubuntu and not on windows
# include workflow for miniconda environment
# todo: change installation for windows
name: Test PtAC

on:
  push:
    branches: [ continuous-integration-sn ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ continuous-integration-sn ]
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [ubuntu-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Sets up python3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8 

      # Installs and upgrades pip, installs other dependencies and installs the package from setup.py
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry install

      # Test with poetry pytest
      - name: Test with pytest
        run: poetry run pytest -v

#      # Upload to TestPyPI
#      - name: Build and Upload Publish Python 🐍 distributions 📦 to TestPyPI
#        uses: JRubics/poetry-publish@v1.11
#        with:
#          python_version: "3.8"
#          pypi_token: ${{ secrets.TEST_PYPI_API_KEY }}
#          repository_name: "testpypi"
#          repository_url: "https://test.pypi.org/legacy/"
#          build_format: "sdist"
#jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-python@v2
#      - name: Install Poetry
#        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
#      - name: Add Poetry to path
#        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH
#      - name: Install dependencies
#        run: poetry install
#      - name: Test
#        run: poetry run pytest -v

#jobs:
#  build:
#    runs-on: ${{matrix.platform}}
#    strategy:
#      matrix:
#        platform: [ubuntu-latest] #, macos-latest, windows-latest]
#        python-version: [3.8]

#    steps:
#    - uses: actions/checkout@v1
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install poetry
#        poetry install
#    - name: Test with pytest
#      run: poetry run pytest -v
